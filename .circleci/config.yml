version: 2
jobs:
  build:
    working_directory: ~/alfanse/embers
    parallelism: 1
    shell: /bin/bash --login
    # CircleCI 2.0 does not support environment variables that refer to each other the same way as 1.0 did.
    # If any of these refer to each other, rewrite them so that they don't or see https://circleci.com/docs/2.0/env-vars/#interpolating-environment-variables-to-set-other-environment-variables .
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    # In CircleCI 1.0 we used a pre-configured image with a large number of languages and other packages.
    # In CircleCI 2.0 you can now specify your own image, or use one of our pre-configured images.
    # The following configuration line tells CircleCI to use the specified docker image as the runtime environment for you job.
    # For more information on choosing an image (or alternatively using a VM instead of a container)
    # see https://circleci.com/docs/2.0/executor-types/
    # To see the list of pre-built images that CircleCI provides for most common languages
    # see https://circleci.com/docs/2.0/circleci-images/
    docker:
    - image: circleci/openjdk:8-jdk
    steps:
    - checkout
    # Prepare for artifact and test results  collection equivalent to how it was done on 1.0.
    # In many cases you can simplify this from what is generated here.
    # 'See docs on artifact collection here https://circleci.com/docs/2.0/artifacts/'
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - run:
        working_directory: ~/alfanse/embers
        # for diagnostics, show me the version, includes JVM, and Gradle.
        command: ./gradlew --version
    # Build
    - run: ./gradlew build codeCoverageReport
    # Teardown
    #   If you break your build into multiple jobs with workflows, you will probably want to do the parts of this that are relevant in each
    # Save test results
    - store_test_results:
        path: embers-services/build/test-results
    # Save artifacts
    - store_artifacts:
        name: store embers-services reports
        path: embers-services/build/reports
    - store_artifacts:
        name: store embers-spring reports
        path: embers-spring/build/reports
    - store_artifacts:
        name: store embers-acceptance-tests reports
        path: embers-acceptance-tests/build/reports
        destination: yatspec
    - store_artifacts:
        name: store jacoco reports
        path: build/reports/jacoco
        destination: jacoco
