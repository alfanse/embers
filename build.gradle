description = """Embers - Embedded Sql Reporting.
Embeddable servlets that expose a restricted set of queries for an sql database.
Hosted on github: https://github.com/alfanse/embers.git"""

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.adarshr:gradle-test-logger-plugin:1.7.0"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    apply plugin: 'com.adarshr.test-logger'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    ext {
        appName = "Embers"
    }

    group = 'adf.embers'
    version = System.getProperty('build.number', 'DEV-SNAPSHOT')
}

task codeCoverageReport(type: JacocoReport) {
//swiped from http://csiebler.github.io/blog/2014/02/09/multi-project-code-coverage-using-gradle-and-jacoco/

    // Gather execution data from all subprojects
    // (change this if you e.g. want to calculate unit test/integration test coverage separately)
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    // Add all relevant sourcesets from the subprojects
    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        html.enabled true
        html.destination file("${buildDir}/reports/jacoco")
        println "code coverage reports: " + html.destination
    }
}

// always run the tests before generating the report
codeCoverageReport.dependsOn {
    subprojects*.test
}

check.dependsOn jacocoTestReport

subprojects {

    def jaxb = '2.3.0'
    def junitJupiter = '5.7.1'

    extensions.add("libs", [
            core: [
                //the only libraries the production jar depends on
                'javax.ws.rs:javax.ws.rs-api:2.1',
                'javax.inject:javax.inject:1',
                'javax.activation:activation:1.1.1',
                "javax.xml.bind:jaxb-api:$jaxb",
                "com.sun.xml.bind:jaxb-core:$jaxb",
                "com.sun.xml.bind:jaxb-impl:$jaxb",
                'org.jdbi:jdbi:2.78'
            ],
            unit_tests: [
                "org.junit.jupiter:junit-jupiter:$junitJupiter",
                'org.easytesting:fest-assert-core:2.0M10',
                'org.mockito:mockito-core:3.8.0',
                'org.mockito:mockito-junit-jupiter:3.8.0'
            ],
            acceptance_tests: [
//            the bdd framework, makes pretty html reports from Junit tests
                'com.github.nickmcdowall:yatspec:2021.1.1'
            ],
            jersey: [
//            implements javax.ws.rs
                'org.glassfish.jersey.core:jersey-server:2.2',
                'org.glassfish.jersey.containers:jersey-container-servlet:2.2'
            ],
            jaxson: [
//              handles json serialisation
                'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.5.2'
            ],
            gson: [
                //serialise java to json
                'com.google.code.gson:gson:2.8.2'
            ],
            json_assert: [
                'org.skyscreamer:jsonassert:1.2.3'
            ],
            jetty: [
//              beloved server
                'org.eclipse.jetty:jetty-server:9.3.0.M1',
                'org.eclipse.jetty:jetty-servlet:9.3.0.M1'
            ],
            database: [
//              beloved in-memory DB for testing.
                'org.hsqldb:hsqldb:2.3.2'
            ]
    ])
}
