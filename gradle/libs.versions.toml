[versions]
jaxb = "2.3.0"
mockito = "3.8.0"
jetty = "12.0.7"

[libraries]

# Core Libraries
gson = { module = "com.google.code.gson:gson", version = "2.8.2" }

# Jakarta EE
json_assert = { module = "org.skyscreamer:jsonassert", version = "1.2.3" }

jakarta_annotation_api = { module = "jakarta.annotation:jakarta.annotation-api", version = "3.0.0" }
jakarta_ws_rs = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version = "3.1.0" }
jakarta_servlet = { module = "jakarta.servlet:jakarta.servlet-api", version = "6.0.0" }
jakarta_inject = { module = "jakarta.inject:jakarta.inject-api", version = "2.0.1" }

# Jakarta EE 10 dependencies
jakarta_websocket_api = { module = "jakarta.websocket:jakarta.websocket-api", version = "2.1.1" }
jakarta_websocket_client_api = { module = "jakarta.websocket:jakarta.websocket-client-api", version = "2.1.1" }

javax_xml_bind = { module = "javax.xml.bind:jaxb-api", version.ref = "jaxb" }
jaxb_core = { module = "com.sun.xml.bind:jaxb-core", version.ref = "jaxb" }
jaxb_impl = { module = "com.sun.xml.bind:jaxb-impl", version.ref = "jaxb" }
jdbi = { module = "org.jdbi:jdbi", version = "2.78" }

jaxson = { module = "com.fasterxml.jackson.jakarta.rs:jackson-jakarta-rs-json-provider", version = "2.16.1" }

# Jersey
jersey_container_servlet = { module = "org.glassfish.jersey.containers:jersey-container-servlet", version = "3.1.3" }
jersey_hk2 = { module = "org.glassfish.jersey.inject:jersey-hk2", version = "3.1.3" }
jersey_media_json = { module = "org.glassfish.jersey.media:jersey-media-json-jackson", version = "3.1.3" }
jersey_server = { module = "org.glassfish.jersey.core:jersey-server", version = "3.1.3" }

jetty_server = { module = "org.eclipse.jetty.ee10:jetty-ee10-servlet", version.ref = "jetty" }
jetty_http = { module = "org.eclipse.jetty:jetty-http", version.ref = "jetty" }
jetty_io = { module = "org.eclipse.jetty:jetty-io", version.ref = "jetty" }
jetty_util = { module = "org.eclipse.jetty:jetty-util", version.ref = "jetty" }

# Using an older version of JSTL that's more stable with our setup
jstl = { module = "org.glassfish.web:jakarta.servlet.jsp.jstl", version = "2.0.0" }

hsqldb = { module = "org.hsqldb:hsqldb", version = "2.7.4" }

junit_jupiter = { module = "org.junit.jupiter:junit-jupiter", version = "5.10.1" }
assertj = { module = "org.assertj:assertj-core", version = "3.24.2" }
fest_assert = { module = "org.easytesting:fest-assert-core", version = "2.0M10" }
mockito_core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito_junit_jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }

yatspec = { module = "com.github.nickmcdowall:yatspec", version = "2021.1.1" }

# HK2 (Hundred-Kilobyte Kernel) dependencies
hk2_api = { module = "org.glassfish.hk2:hk2-api", version = "3.0.5" }
hk2_locator = { module = "org.glassfish.hk2:hk2-locator", version = "3.0.5" }
hk2_utils = { module = "org.glassfish.hk2:hk2-utils", version = "3.0.5" }
hk2_runlevel = { module = "org.glassfish.hk2:hk2-runlevel", version = "3.0.5" }

[bundles]
core = [
    # the only libraries the production jar depends on
    "jakarta_ws_rs", "jakarta_servlet", "jakarta_inject", "javax_xml_bind", "jaxb_core", "jaxb_impl", "jdbi"
]

unit_tests = [
    "assertj", "junit_jupiter", "fest_assert", "mockito_core", "mockito_junit_jupiter"
]

acceptance_tests = [
    # The bdd framework, makes pretty html reports from Junit tests
    "yatspec"
]

jakarta_web_server = [
    "jakarta_websocket_api", "jakarta_websocket_client_api", "jstl"
]

jersey = [
    # implements jakarta.ws.rs with HK2
    "jersey_server", "jersey_container_servlet", "jersey_media_json", "jersey_hk2",
    
    # HK2 (Hundred-Kilobyte Kernel) dependencies
    "hk2_api", "hk2_locator", "hk2_utils", "hk2_runlevel"
]

jetty = [
    # beloved server
    "jetty_server", "jetty_http", "jetty_io", "jetty_util"
]

database = [
    # beloved in-memory DB for testing.
    "hsqldb"
]

[plugins]
